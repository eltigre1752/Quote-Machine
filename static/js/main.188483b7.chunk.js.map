{"version":3,"sources":["Data/colorsArray.js","Quote.js","App.js","reportWebVitals.js","index.js"],"names":["colorsArray","Quote","props","bgColor","quote","author","handleClick","className","style","backgroundColor","color","id","icon","faQuoteLeft","href","encodeURI","faTwitter","faTumblr","onClick","App","useState","setQuote","setAuthor","quoteArr","setQuoteArr","setBgColor","useEffect","fetch","then","respond","json","result","quotes","Math","floor","random","length","randomIndex","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qMAYeA,G,KAZK,CAAC,UAAW,UAAW,UAAW,UAAW,UAC7D,UAAW,UAAW,UAAW,UAAW,UAC5C,UAAW,UAAW,UAAW,UAAW,UAC5C,UAAW,UAAW,UAAW,UAAW,UAC5C,UAAW,UAAW,UAAW,UAAW,UAC5C,UAAW,UAAW,UAAW,UAAW,UAC5C,UAAW,UAAW,UAAW,UAAW,UAC5C,UAAW,UAAW,UAAW,UAAW,UAC5C,UAAW,UAAW,UAAW,UAAW,UAC5C,UAAW,UAAW,UAAW,UAAW,Y,6BC6BjCC,MA/Bf,SAAgBC,GACZ,IAAOC,EAAuCD,EAAvCC,QAASC,EAA8BF,EAA9BE,MAAOC,EAAuBH,EAAvBG,OAAQC,EAAeJ,EAAfI,YAC/B,OACI,qBAAKC,UAAU,UACZC,MAAO,CAACC,gBAAiBN,EAASO,MAAOP,GAD5C,SAEA,sBAAKQ,GAAG,YAAR,UACE,oBAAGA,GAAG,OAAN,UACA,cAAC,IAAD,CAAiBC,KAAMC,MADvB,IACwCT,KAExC,oBAAGO,GAAG,SAAN,eACKN,KAEL,mBAAIG,MAAO,CAACC,gBAAiBN,GACzBQ,GAAG,cAAcJ,UAAU,MAC3BO,KAAMC,UAAU,4CAAD,OAA6CX,EAA7C,aAAuDC,IAF1E,SAGE,cAAC,IAAD,CAAiBO,KAAMI,QAEzB,mBAAIR,MAAO,CAACC,gBAAiBN,GACzBQ,GAAG,cAAcJ,UAAU,MAC3BO,KAAMC,UAAU,gCAAD,OAAiCX,EAAjC,aAA2CC,IAF9D,SAGE,cAAC,IAAD,CAAiBO,KAAMK,QAEzB,wBAAQT,MAAO,CAACC,gBAAiBN,GAAUQ,GAAG,YACtCJ,UAAU,MAAMW,QAAW,kBAAMZ,KADzC,6BCgBKa,MAnCf,WACE,MAA0BC,mBAJR,mFAIlB,mBAAOhB,EAAP,KAAciB,EAAd,KACA,EAA4BD,mBAJf,iBAIb,mBAAOf,EAAP,KAAeiB,EAAf,KACA,EAAgCF,mBAAS,MAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAA8BJ,mBAAS,MAAvC,mBAAOjB,EAAP,KAAgBsB,EAAhB,KAmBA,OAjBAC,qBAAU,WACRC,MAXa,0IAYVC,MAAK,SAAAC,GAAO,OAAIA,EAAQC,UACxBF,MAAK,SAACG,GAAD,OAAYP,EAAYO,EAAOC,aACtC,IAEHN,qBAAU,WACRD,EAAWzB,EAAYiC,KAAKC,MAAMD,KAAKE,SAAWnC,EAAYoC,YAC7D,CAAChC,IAUF,qBAAKG,UAAU,MAAf,SACE,cAAC,EAAD,CACEJ,QAASA,EACTC,MAAOA,EACPC,OAAQA,EACRC,YAZiB,WACrB,IAAM+B,EAAcJ,KAAKC,MAAMD,KAAKE,SAAWZ,EAASa,QACxDd,EAAUC,EAASc,GAAahC,QAChCgB,EAASE,EAASc,GAAajC,aClBpBkC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1BZ,K","file":"static/js/main.188483b7.chunk.js","sourcesContent":["const colorsArray = ['#FF6633', '#FFB399', '#FF33FF', '#FFFF99', '#00B3E6', \r\n\t\t  '#E6B333', '#3366E6', '#999966', '#99FF99', '#B34D4D',\r\n\t\t  '#80B300', '#809900', '#E6B3B3', '#6680B3', '#66991A', \r\n\t\t  '#FF99E6', '#CCFF1A', '#FF1A66', '#E6331A', '#33FFCC',\r\n\t\t  '#66994D', '#B366CC', '#4D8000', '#B33300', '#CC80CC', \r\n\t\t  '#66664D', '#991AFF', '#E666FF', '#4DB3FF', '#1AB399',\r\n\t\t  '#E666B3', '#33991A', '#CC9999', '#B3B31A', '#00E680', \r\n\t\t  '#4D8066', '#809980', '#E6FF80', '#1AFF33', '#999933',\r\n\t\t  '#FF3380', '#CCCC00', '#66E64D', '#4D80CC', '#9900B3', \r\n\t\t  '#E64D66', '#4DB380', '#FF4D4D', '#99E6E6', '#6666FF'];\r\n\r\n\r\nexport default colorsArray;","import React, { useState, useEffect } from 'react';\r\nimport './styles/App.scss';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTwitter, faTumblr } from '@fortawesome/free-brands-svg-icons';\r\nimport { faQuoteLeft } from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\nfunction Quote (props) {\r\n    const {bgColor, quote, author, handleClick} = props;\r\n    return(\r\n        <div className=\"wrapper\" \r\n           style={{backgroundColor: bgColor, color: bgColor}}>\r\n        <div id=\"quote-box\">\r\n          <p id=\"text\">\r\n          <FontAwesomeIcon icon={faQuoteLeft} /> {quote}\r\n          </p>\r\n          <p id=\"author\">\r\n            - {author}\r\n          </p>\r\n          <a  style={{backgroundColor: bgColor}} \r\n              id=\"tweet-quote\" className=\"btn\" \r\n              href={encodeURI(`http://www.twitter.com/intent/tweet?text=${quote} -${author}`)}>\r\n            <FontAwesomeIcon icon={faTwitter} />\r\n          </a>\r\n          <a  style={{backgroundColor: bgColor}} \r\n              id=\"tweet-quote\" className=\"btn\" \r\n              href={encodeURI(`https://www.tumblr.com/?text=${quote} -${author}`)}>\r\n            <FontAwesomeIcon icon={faTumblr} />\r\n          </a>\r\n          <button style={{backgroundColor: bgColor}} id=\"new-quote\" \r\n                  className=\"btn\" onClick = {() => handleClick()}>\r\n            New Quote\r\n          </button>\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Quote;","import React, { useState, useEffect } from 'react';\r\nimport './styles/App.scss';\r\nimport colorsArray from './Data/colorsArray.js';\r\nimport Quote from './Quote';\r\n\r\n\r\nconst quoteAPI = \"https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json\" \r\nconst myStatement = 'Hi this is my Random quote machine, to start making new quote press \"New Quote\"';\r\nconst myName = 'Tran Hong Van';\r\n\r\nfunction App() {\r\n  const [quote, setQuote] = useState(myStatement);\r\n  const [author, setAuthor] = useState(myName);\r\n  const [quoteArr, setQuoteArr] = useState(null);\r\n  const [bgColor, setBgColor] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetch(quoteAPI)\r\n      .then(respond => respond.json())\r\n      .then((result) => setQuoteArr(result.quotes))\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    setBgColor(colorsArray[Math.floor(Math.random() * colorsArray.length)]);\r\n  }, [quote])\r\n\r\n  \r\n  const generateRandom = () => {\r\n    const randomIndex = Math.floor(Math.random() * quoteArr.length);\r\n    setAuthor(quoteArr[randomIndex].author);\r\n    setQuote(quoteArr[randomIndex].quote);\r\n  }\r\n  \r\n  return (\r\n    <div className=\"App\">\r\n      <Quote \r\n        bgColor={bgColor} \r\n        quote={quote} \r\n        author={author} \r\n        handleClick={generateRandom}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles/index.scss';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}